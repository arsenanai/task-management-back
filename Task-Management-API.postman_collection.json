{
    "info": {
        "_postman_id": "a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d",
        "name": "Yii2 Task Management API",
        "description": "A collection for testing the Advanced CRUD Yii2 Task Management API.",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "Authentication",
            "item": [
                {
                    "name": "Login as Admin",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "var jsonData = pm.response.json();",
                                    "pm.collectionVariables.set(\"admin_token\", jsonData.data.token);"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"password\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/auth/login",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "auth",
                                "login"
                            ]
                        },
                        "description": "Logs in the default admin user and saves the JWT to a collection variable `admin_token`."
                    },
                    "response": []
                },
                {
                    "name": "Login as User",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "var jsonData = pm.response.json();",
                                    "pm.collectionVariables.set(\"user_token\", jsonData.data.token);"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"email\": \"user@example.com\",\n    \"password\": \"userpass\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/auth/login",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "auth",
                                "login"
                            ]
                        },
                        "description": "Logs in a regular user and saves the JWT to a collection variable `user_token`."
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "Tasks",
            "item": [
                {
                    "name": "List Tasks (Default)",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/tasks?status=1&priority=3&sort=-due_date&expand=tags,assignedUser&per-page=5",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "tasks"
                            ],
                            "query": []
                        },
                        "description": "Retrieves a paginated list of tasks with default sorting (newest first)."
                    },
                    "response": []
                },
                {
                    "name": "Search by Keyword",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/tasks?keyword=API",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "tasks"
                            ],
                            "query": [
                                {
                                    "key": "keyword",
                                    "value": "API",
                                    "description": "Search for 'API' in title and description."
                                }
                            ]
                        },
                        "description": "Performs a full-text search across task titles and descriptions."
                    },
                    "response": []
                },
                {
                    "name": "Filter by Status and Priority",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/tasks?status=1&priority=3",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "tasks"
                            ],
                            "query": [
                                {
                                    "key": "status",
                                    "value": "1"
                                },
                                {
                                    "key": "priority",
                                    "value": "3"
                                }
                            ]
                        },
                        "description": "Filters for tasks that are 'pending' (1) AND have a 'high' priority (3)."
                    },
                    "response": []
                },
                {
                    "name": "Filter by Tags (AND logic)",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/tasks?tags=3,6",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "tasks"
                            ],
                            "query": [
                                {
                                    "key": "tags",
                                    "value": "3,6",
                                    "description": "Finds tasks that have BOTH the tag with ID 3 AND the tag with ID 6."
                                }
                            ]
                        },
                        "description": "Filters tasks by multiple tags using AND logic."
                    },
                    "response": []
                },
                {
                    "name": "Filter by Due Date Range & Sort",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/tasks?due_from=2025-10-01&due_to=2025-10-20&sort=due_date",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "tasks"
                            ],
                            "query": [
                                {
                                    "key": "due_from",
                                    "value": "2025-10-01"
                                },
                                {
                                    "key": "due_to",
                                    "value": "2025-10-20"
                                },
                                {
                                    "key": "sort",
                                    "value": "due_date"
                                }
                            ]
                        },
                        "description": "Finds tasks due within a specific date range and sorts them by the due date."
                    },
                    "response": []
                },
                {
                    "name": "Create Task",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "var jsonData = pm.response.json();",
                                    "pm.collectionVariables.set(\"new_task_id\", jsonData.data.id);",
                                    "pm.collectionVariables.set(\"new_task_version\", jsonData.data.version);"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"title\": \"New Task from Postman\",\n    \"description\": \"This is a detailed description.\",\n    \"due_date\": \"2025-12-31\",\n    \"assigned_to\": 1,\n    \"tag_ids\": [1, 2]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/tasks",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "tasks"
                            ]
                        },
                        "description": "Creates a new task and saves its ID and version to collection variables."
                    },
                    "response": []
                },
                {
                    "name": "View Task",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/tasks/{{new_task_id}}?expand=tags,assignedUser",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "tasks",
                                "{{new_task_id}}"
                            ],
                            "query": [
                                {
                                    "key": "expand",
                                    "value": "tags,assignedUser"
                                }
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Update Task (Success)",
                    "request": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"title\": \"Updated Task Title from Postman\",\n    \"version\": {{new_task_version}}\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/tasks/{{new_task_id}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "tasks",
                                "{{new_task_id}}"
                            ]
                        },
                        "description": "Updates a task using the correct version for optimistic locking."
                    },
                    "response": []
                },
                {
                    "name": "Update Task (Optimistic Lock Fail)",
                    "request": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"title\": \"This update should fail\",\n    \"version\": 0\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/tasks/{{new_task_id}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "tasks",
                                "{{new_task_id}}"
                            ]
                        },
                        "description": "Attempts to update a task with an old version number, expecting a 409 Conflict error."
                    },
                    "response": []
                },
                {
                    "name": "Toggle Task Status",
                    "request": {
                        "method": "PATCH",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/tasks/{{new_task_id}}/toggle-status",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "tasks",
                                "{{new_task_id}}",
                                "toggle-status"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Soft Delete Task",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/tasks/{{new_task_id}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "tasks",
                                "{{new_task_id}}"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Restore Task",
                    "request": {
                        "method": "PATCH",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/tasks/{{new_task_id}}/restore",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "tasks",
                                "{{new_task_id}}",
                                "restore"
                            ]
                        }
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "Tags",
            "item": []
        }
    ],
    "auth": {
        "type": "bearer",
        "bearer": [
            {
                "key": "token",
                "value": "{{admin_token}}",
                "type": "string"
            }
        ]
    },
    "event": [
        {
            "listen": "prerequest",
            "script": {
                "type": "text/javascript",
                "exec": [
                    ""
                ]
            }
        },
        {
            "listen": "test",
            "script": {
                "type": "text/javascript",
                "exec": [
                    ""
                ]
            }
        }
    ],
    "variable": [
        {
            "key": "baseUrl",
            "value": "http://localhost:8080",
            "type": "string"
        },
        {
            "key": "admin_token",
            "value": "",
            "type": "string"
        },
        {
            "key": "user_token",
            "value": "",
            "type": "string"
        },
        {
            "key": "new_task_id",
            "value": "",
            "type": "string"
        },
        {
            "key": "new_task_version",
            "value": "",
            "type": "string"
        }
    ]
}